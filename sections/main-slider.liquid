{% schema %}
{
  "name": "Homepage section",
  "settings": [
    {
      "type": "header",
      "content": "Feautred items"
    },
    {
      "type": "url",
      "label": "Featured 1",
      "id": "manta_featuredbox_1"
    },
    {
      "type": "image_picker",
      "label": "Img",
      "id": "manta_featuredbox_img_1"
    },
    {
      "type": "url",
      "label": "Featured 2",
      "id": "manta_featuredbox_2"
    },
    {
      "type": "image_picker",
      "label": "Img",
      "id": "manta_featuredbox_img_2"
    },
    {
      "type": "header",
      "content": "Carousel Slides"
    },
    {
      "type": "url",
      "label": "Slide link 1",
      "id": "manta_slide_link_1"
    },
    {
      "type": "image_picker",
      "label": "Img Desktop",
      "id": "manta_slider_img_1"
    },
    {
      "type": "image_picker",
      "label": "Img Mobile",
      "id": "manta_slider_img_mob_1"
    },
    {
      "type": "url",
      "label": "Slide link 2",
      "id": "manta_slide_link_2"
    },
    {
      "type": "image_picker",
      "label": "Img Desktop",
      "id": "manta_slider_img_2"
    },
    {
      "type": "image_picker",
      "label": "Img Mobile",
      "id": "manta_slider_img_mob_2"
    },
    {
      "type": "url",
      "label": "Slide link 3",
      "id": "manta_slide_link_3"
    },
    {
      "type": "image_picker",
      "label": "Img Desktop",
      "id": "manta_slider_img_3"
    },
    {
      "type": "image_picker",
      "label": "Img Mobile",
      "id": "manta_slider_img_mob_3"
    }
  ],
  "blocks": [
    {
      "name": "Menu item",
      "type": "url",
      "settings": [
        {
          "type": "text",
          "label": "Name",
          "id": "manta_q-menu-item-name"
        },
        {
          "type": "image_picker",
          "label": "Icon",
          "id": "manta_q-menu-item-img"
        },
        {
          "type": "url",
          "label": "Link",
          "id": "manta_q-menu-item-url"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Main Menu Slider"
    }
  ]
}
{% endschema %}

  <style>
    .manta-grid-container {
      display: grid;
      grid-template-columns: 1fr 3fr; /* sidebar + content */
      gap: 2px;
      align-items: stretch;
    }
    .manta-sidebar {
      background: #313131;
      color: #fff;
      position: relative; /* needed for internal positioning */
      padding: 0;
      overflow: hidden;
      border-radius: 0px 0px 0px 8px;
    }
    .manta-sidebar-inner {
      position: relative;
      box-sizing: border-box;
      height: 100%; /* fill the grid cellâ€™s height */
    }
    .manta-menu {
      margin: 0;
      padding: 0;
      list-style: none;
      background-color: #313131;
      transition: max-height 0.3s ease;
    }
    .manta-menu.collapsed {
      position: absolute; 
      top: 0; 
      left: 0; 
      right: 0;
      max-height: none;
      overflow: visible;
      z-index: 1;
      padding-bottom: 2.5rem; /* Add this line */
      padding-top: 0.3rem;
    }

    /* COLLAPSED: partial view */
    .manta-menu.expanded {
      position: relative; 
      max-height: calc(100% - 60px);
      overflow: hidden;
      padding-bottom: 2.5rem; /* Add this line */
      padding-top: 0.3rem;
    }

    /* Menu items */
    .manta-menu-item {
      border-bottom: 1px solid #444;
    }
    .manta-menu-item a {
      display: flex;
      align-items: center;
      gap: 10px;
      text-decoration: none;
      color: #fff;
      padding: 10px 16px;
      transition: background-color 0.2s;
    }
    .manta-menu-item a:hover {
      background-color: #444;
    }

    /* Icons */
    .manta-menu-icon {
      width: 24px;
      height: 24px;
      flex-shrink: 0;
      display: inline-block;
    }
    .manta-menu-icon img {
      max-width: 100%;
      height: auto;
      display: block;
    }
    .manta-menu-text {
      flex: 1;
      font-size: 0.95rem;
    }

    /* Toggle button always positioned at bottom and on top of menu items */
    .manta-menu-toggle {
      position: absolute;
      bottom: 0;
      left: 0;
      right: 0;
      margin: 0;
      padding: 8px 16px;
      background: #444;
      color: #fff;
      border: none;
      cursor: pointer;
      font-weight: bold;
      transition: background-color 0.2s;
      z-index: 10;
      box-sizing: border-box;
    }
    .manta-menu-toggle:hover {
      background-color: #555;
    }
    .manta-content {
      display: grid;
      grid-template-rows: auto auto;
      gap: 2px;
    }
    .manta-content-box-large {
      position: relative;
      overflow: hidden;
      height: auto;
      aspect-ratio: 16 / 7;
    }
    .manta-content-box-small-container {
      display: grid;
      grid-template-columns: 1fr 1fr;
      gap: 3px;
    }
    .manta-content-box-small {
      min-height: 15vh;
    }
    /* RESPONSIVE BREAKPOINTS */
    @media (max-width: 1024px) {
      .manta-grid-container {
        grid-template-columns: 1fr;
      }
      .manta-sidebar {
        display: none;
      }
    }
    @media (max-width: 768px) {
      .manta-content-box-small-container {
        display: flex;
        overflow-x: scroll;
        gap: 2px;
      }
      .manta-slider-controls {
        display: none !important;
      }
      .manta-content-box-small {
        flex: 0 0 auto;
        width: 84%;
      }
      .manta-content-box-large {
        aspect-ratio: 4 / 3;
      }
      .manta-slide.manta-mslide-1 {
        background-image: url('{{ section.settings.manta_slider_img_mob_1 | img_url: 'master' }}');
      }
      .manta-slide.manta-mslide-2 {
        background-image: url('{{ section.settings.manta_slider_img_mob_2 | img_url: 'master' }}');
      }
      .manta-slide.manta-mslide-3 {
        background-image: url('{{ section.settings.manta_slider_img_mob_3 | img_url: 'master' }}');
      }
    }
    @media (min-width: 768px) {
      .manta-picture-featured-2::after, .manta-content-box-small.manta-cta-box:nth-of-type(2) {
        border-radius: 0px 0px 8px 0px;
      }
    }
    @media (max-width: 1024px) {
      .manta-cta-content:nth-of-type(1), .manta-content-box-small.manta-cta-box:nth-of-type(1) {
        border-radius: 0px 0px 0px 8px;
      }
    }
    @media (max-width: 768px) {
      .manta-cta-content, .manta-content-box-small.manta-cta-box {
        border-radius: 8px 0px 0px 8px;
      }
    }
    @media (max-width: 440px) {
      .manta-content-box-small {
        width: 95%;
      }
      .manta-cta-content {
        min-width: 63.6%;
      }
      .manta-content-box-small.manta-cta-box::after {
        width: 75% !important;
      }
    }
    .manta-slider-container {
      position: relative;
      width: 100%;
      height: 100%;
      overflow: hidden;
    }
    .manta-slides {
      display: flex;
      width: 100%;
      height: 100%;
      transition: transform 0.5s ease;
    }
    .manta-slide {
      min-width: 100%;
      height: 100%;
      background-size: cover;
      background-position: center;
    }
    .manta-slide.manta-mslide-1 {
      background-image: url('{{ section.settings.manta_slider_img_1 | img_url: 'master' }}');
    }
    .manta-slide.manta-mslide-2 {
      background-image: url('{{ section.settings.manta_slider_img_2 | img_url: 'master' }}');
    }
    .manta-slide.manta-mslide-3 {
      background-image: url('{{ section.settings.manta_slider_img_3 | img_url: 'master' }}');
    }
    .manta-slider-controls {
      position: absolute;
      bottom: 5px;
      left: 50%;
      transform: translateX(-50%) scale(0.7);
      transform-origin: center center;
      display: flex;
      align-items: center;
      background-color: white;
      border-radius: 5px;
    }
    .manta-slider-btn {
      background: none;
      border: none;
      font-size: 24px;
      cursor: pointer;
      color: #333;
      outline: none;
      width: 4.4rem;
      height: 4.4rem;
    }
    .manta-dots {
      display: flex;
      gap: 1rem;
      padding: 0 2rem;
    }
    .manta-dots span {
      width: 10px;
      height: 10px;
      display: block;
      border-radius: 50%;
      background-color: #aaa;
      cursor: pointer;
    }
    .manta-dots span.active {
      background-color: #333;
    }
    .manta-pause-play-btn {
      position: relative;
      width: 4.4rem;
      height: 4.4rem;
      cursor: pointer;
    }
    .manta-progress-ring {
      position: absolute;
      top: 0;
      left: 0;
      transform: rotate(-90deg);
      width: 100%;
    }
    .manta-pause-icon,
    .manta-play-icon {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      font-size: 16px;
      pointer-events: none;
    }
    .manta-right-line {
      border-right: 1px solid #eeeeee;
    }
    .manta-both-line {
      border-left: 1px solid #eeeeee;
      border-right: 1px solid #eeeeee;
    }
    .manta-content-box-small.manta-cta-box {
      position: relative; 
      height: auto;        /* Let the box grow naturally */
      overflow: visible;   /* Ensure text isn't cut off */
      background-color: #313131;
    }
    .manta-content-box-small.manta-cta-box.manta-picture-featured-1::after {
      content: "";
      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;  /* So it always stretches to match the parent's height */
      width: 50%;
      background-size: cover;
      background-image: url('{{ section.settings.manta_featuredbox_img_1 | img_url: 'master' }}');
      z-index: 1;
      background-position: center;
    }
    .manta-content-box-small.manta-cta-box.manta-picture-featured-2::after {
      content: "";
      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;  /* So it always stretches to match the parent's height */
      width: 50%;
      background-size: cover;
      background-image: url('{{ section.settings.manta_featuredbox_img_2 | img_url: 'master' }}');
      z-index: 1;
      background-position: center;
    }
    .manta-cta-content {
      position: relative; 
      /* Use a width if you want the left portion to be ~60% */
      width: 60%;
      height: 100%;
      background-color: #313131;
      clip-path: polygon(0 0, 100% 0, 85% 100%, 0 100%);
      /* The rest of your styling can remain similar: */
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: flex-start;
      padding: 1.6rem 1rem 1rem 1.6rem;
      box-sizing: border-box;
      color: #fff;
      z-index: 2;    /* So it appears above the pseudo-element background */
    }
    .manta-cta-content h2 {
      margin: 0 0 8px;
      font-size: 1.2rem;
    }
    .manta-cta-content p {
      margin: 0 0 12px;
      font-size: 0.9rem;
      height: auto;
      max-width: calc(100% - 12px);
      padding-right: 2rem;
      min-height: 1.7rem;
    }
    .manta-cta-content a {
      display: inline-block;
      width: auto;
      background-color: #fff;
      color: #313131;
      border: none;
      padding: 6px 20px;
      cursor: pointer;
      text-transform: uppercase;
      border-radius: 5px;
      text-decoration: none;
      font-size: 12px;
    }
    .manta-sidebar:has(.manta-menu.expanded) {
      border-radius: 0 0 8px 8px;
    }
    @media (max-width: 316px) {
      .manta-cta-content a {
        font-size: 9px;
        padding: 4px 8px;
      }
    }
  </style>

 <div class="manta-grid-container page-width">
    <!-- SIDEBAR -->
    <div class="manta-sidebar">
      <div class="manta-sidebar-inner">
        <ul class="manta-menu collapsed" id="mantaMenu">
        {% for block in section.blocks %}
          <li class="manta-menu-item manta-menu-parent">
            <a href="{{ block.settings.manta_q-menu-item-url }}" target="_SELF">
              <span class="manta-menu-icon">
                {% if block.settings.manta_q-menu-item-img != blank %}
                  <img src="{{ block.settings.manta_q-menu-item-img | img_url: 'master' }}" alt="{{ block.settings.manta_q-menu-item-name }}" width="24" height="24">
                {% endif %}
              </span>
              <span class="manta-menu-text">{{ block.settings.manta_q-menu-item-name }}</span>
            </a>
          </li>
        {% endfor %}
          <!-- Add more <li> items as needed -->
        </ul>

        <!-- Toggle button always fixed at bottom -->
        <button id="mantaMenuToggle" class="manta-menu-toggle">
          Show more
        </button>
      </div>
    </div>
    
    <!-- MAIN CONTENT -->
    <div>
    <div class="manta-content">
      <div class="manta-content-box-large">
        <div class="manta-slider-container" id="landscapeSlider">
          <div class="manta-slides">
            {% if section.settings.manta_slider_img_1 != blank %}
              <a href="{{ section.settings.manta_slide_link_1 }}" class="manta-slide manta-mslide-1"><p></p></a>
            {% endif %}
            {% if section.settings.manta_slider_img_2 != blank %}
              <a href="{{ section.settings.manta_slide_link_2 }}" class="manta-slide manta-mslide-2"><p></p></a>
            {% endif %}
            {% if section.settings.manta_slider_img_3 != blank %}
              <a href="{{ section.settings.manta_slide_link_3 }}" class="manta-slide manta-mslide-3"><p></p></a>
            {% endif %}
          </div>
          <div class="manta-slider-controls">
            <button class="manta-slider-btn manta-right-line prev">&#10094;</button>
            <div class="manta-dots"></div>
            <button class="manta-slider-btn manta-both-line next">&#10095;</button>
            <div class="manta-pause-play-btn">
              <svg class="manta-progress-ring" width="40" height="40">
                <circle
                  class="manta-progress-ring__circle"
                  stroke="#000"
                  stroke-width="3"
                  fill="transparent"
                  r="18"
                  cx="20"
                  cy="20"
                />
              </svg>
              <span class="manta-pause-icon">&#10073;&#10073;</span>
              <span class="manta-play-icon" style="display:none;">&#9658;</span>
            </div>
          </div>
        </div>
      </div>

      <div class="manta-content-box-small-container">
        <div class="manta-content-box-small manta-cta-box manta-picture-featured-1">
          <div class="manta-cta-content">
            <h2>Warmotech</h2>
            <p>LangÅ³ iÅ¡neÅ¡imo profiliai. LangÅ³ iÅ¡neÅ¡imo profiliai. LangÅ³ iÅ¡neÅ¡imo profiliai. LangÅ³ iÅ¡neÅ¡imo profiliai. LangÅ³ iÅ¡neÅ¡imo profiliai. LangÅ³ iÅ¡neÅ¡imo profiliai.</p>
            <a href="{{ section.settings.manta_featuredbox_1 }}">Shop Now</a>
          </div>
        </div>
        <div class="manta-content-box-small manta-cta-box manta-picture-featured-2">
          <div class="manta-cta-content">
            <h2>Warmotech</h2>
            <p>LangÅ³ iÅ¡neÅ¡imo profiliai.</p>
            <a href="{{ section.settings.manta_featuredbox_2 }}">Shop Now</a>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
<!-- SLIDER JS -->
  <script>
    document.addEventListener("DOMContentLoaded", function() {
      const slider = document.getElementById("landscapeSlider");
      const slidesWrap = slider.querySelector(".manta-slides");
      const slides = slider.querySelectorAll(".manta-slide");
      const prevBtn = slider.querySelector(".manta-slider-btn.prev");
      const nextBtn = slider.querySelector(".manta-slider-btn.next");
      const dotsContainer = slider.querySelector(".manta-dots");
      const pausePlayBtn = slider.querySelector(".manta-pause-play-btn");
      const pauseIcon = slider.querySelector(".manta-pause-icon");
      const playIcon = slider.querySelector(".manta-play-icon");

      const progressRing = slider.querySelector(".manta-progress-ring__circle");
      const circumference = 2 * Math.PI * progressRing.r.baseVal.value;
      progressRing.style.strokeDasharray = circumference;
      progressRing.style.strokeDashoffset = circumference;

      let currentIndex = 0;
      const totalSlides = slides.length;
      const slideDuration = 3000;
      let isPlaying = true;
      let progressStartTime = null;
      let animationFrameId = null;

      // Create dots
      for (let i = 0; i < totalSlides; i++) {
        const dot = document.createElement("span");
        dot.addEventListener("click", () => goToSlide(i));
        dotsContainer.appendChild(dot);
      }
      const dots = dotsContainer.querySelectorAll("span");
      dots[currentIndex].classList.add("active");

      function updateSlidePosition() {
        slidesWrap.style.transform = `translateX(-${currentIndex * 100}%)`;
        dots.forEach(dot => dot.classList.remove("active"));
        dots[currentIndex].classList.add("active");
      }
      function goToSlide(index) {
        currentIndex = (index + totalSlides) % totalSlides;
        updateSlidePosition();
        resetProgressRing();
      }
      function nextSlide() {
        goToSlide(currentIndex + 1);
      }
      function prevSlide() {
        goToSlide(currentIndex - 1);
      }
      function resetProgressRing() {
        progressRing.style.strokeDashoffset = circumference;
        progressStartTime = null;
      }
      function animateRing(timestamp) {
        if (!progressStartTime) progressStartTime = timestamp;
        const elapsed = timestamp - progressStartTime;
        const progress = Math.min(elapsed / slideDuration, 1);
        const offset = circumference - (progress * circumference);
        progressRing.style.strokeDashoffset = offset;
        if (progress < 1) {
          animationFrameId = requestAnimationFrame(animateRing);
        } else {
          nextSlide();
          if (isPlaying) {
            animationFrameId = requestAnimationFrame(animateRing);
          }
        }
      }
      function startProgressRing() {
        resetProgressRing();
        cancelAnimationFrame(animationFrameId);
        animationFrameId = requestAnimationFrame(animateRing);
      }
      function pauseProgressRing() {
        cancelAnimationFrame(animationFrameId);
        animationFrameId = null;
      }

      nextBtn.addEventListener("click", function() {
        nextSlide();
        if (isPlaying) startProgressRing();
      });
      prevBtn.addEventListener("click", function() {
        prevSlide();
        if (isPlaying) startProgressRing();
      });
      pausePlayBtn.addEventListener("click", function() {
        isPlaying = !isPlaying;
        if (isPlaying) {
          pauseIcon.style.display = "inline";
          playIcon.style.display = "none";
          startProgressRing();
        } else {
          pauseIcon.style.display = "none";
          playIcon.style.display = "inline";
          pauseProgressRing();
        }
      });

      // Start auto-play
      startProgressRing();
    });
  </script>

  <!-- COLLAPSIBLE MENU JS (REVERSED LOGIC) -->
  <script>
    document.addEventListener("DOMContentLoaded", function() {
      const menu = document.getElementById("mantaMenu");
      const toggleBtn = document.getElementById("mantaMenuToggle");
      let expanded = true; // start expanded (default state)

      toggleBtn.addEventListener("click", function() {
        if (expanded) {
          // Collapse the menu
          menu.classList.remove("collapsed");
          menu.classList.add("expanded");
          toggleBtn.textContent = "Show Less";
          expanded = false;
        } else {
          // Expand the menu
          menu.classList.remove("expanded");
          menu.classList.add("collapsed");
          toggleBtn.textContent = "Show More";
          expanded = true;
        }
      });
    });
  </script>

